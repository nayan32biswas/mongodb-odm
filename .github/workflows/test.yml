name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.10"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
            *.lock

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}
        with:
          limit-access-to-actor: true

      - name: Install Dependencies
        run: uv sync --extra dev

      - name: Lint
        run: ./scripts/lint.sh

      - run: mkdir coverage
      - name: Test
        run: |
          docker compose up -d init-replica
          echo "Sleep 5 seconds to allow replica set initialization" && sleep 5
          ./scripts/test.sh
          docker compose stop mongodb mongodb_follower

        env:
          MONGO_URL: mongodb://localhost:27017/testdb?replicaSet=rs0
          COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}

      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage
          include-hidden-files: true

  coverage-combine:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.10"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
            *.lock

      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true

      - name: Install Dependencies
        run: uv sync --extra dev

      - run: ls -la coverage
      - run: uv run --extra dev coverage combine coverage
      - run: uv run --extra dev coverage report
      - run: uv run --extra dev coverage html --title "Coverage for ${{ github.sha }}"

      - name: Store coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
          include-hidden-files: true
